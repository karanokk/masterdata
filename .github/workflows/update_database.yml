# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: database updater

on:
  schedule:
    - cron: '0 */3 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Set version number & database name
      run: |
        d=`TZ=Asia/Shanghai date +%Y%m%d%H`
        echo ::set-output name=ver::$d
        echo ::set-output name=dbname::masterdata_$d
      id: args
    - uses: actions/checkout@v2
    - name: Use Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install Pipenv
      uses: dschep/install-pipenv-action@v1
    - name: Install Dependencies
      run: pipenv install
    - name: Cache Python dependencies
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-masterdata-cache
        restore-keys: |
          ${{ runner.os }}-masterdata-cache
    - name: Get Gist
      id: get
      uses: andymckay/get-gist-action@master
      with:
        gistURL: "https://gist.github.com/karanokk/e1c276da121c2a231dabcaba5c07b682"
    - name: Make database
      id: database
      run: |
        product_path='./masterdata.sqlite3'
        pipenv run python -m masterdata -f $product_path -F $product_path --verpath ${{ steps.get.outputs.file }}
        [ -f $product_path ] && echo ::set-output name=hasUpdate::true && zip -r ./${{ steps.args.outputs.dbname }}.zip $product_path || echo ::set-output name=hasUpdate::false
    - name: Create Release
      id: create_release
      if: steps.database.outputs.hasUpdate == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.args.outputs.ver }}
        release_name: ${{ steps.args.outputs.ver }}
        draft: false
        prerelease: true
    - name: Upload Release Asset
      if: steps.database.outputs.hasUpdate == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.args.outputs.dbname }}.zip
        asset_name: ${{ steps.args.outputs.dbname }}.zip
        asset_content_type: application/zip
    - name: Update latest id on gist
      if: steps.database.outputs.hasUpdate == 'true'
      uses: andymckay/append-gist-action@master
      with:
        gistURL: "https://gist.github.com/karanokk/e1c276da121c2a231dabcaba5c07b682"
        token: ${{ secrets.GIST_PAT }}
        file: ${{ steps.get.outputs.file }}
